{"version":3,"sources":["jquery.responsive-accordion-tabs.js"],"names":["factory","define","amd","jQuery","$","fn","accordionTabs","options","accordionOptions","tabOptions","settings","extend","mediaQuery","this","init","implement","window","on","debounce","isLargeViewport","matchMedia","matches","each","accordionTab","headings","find","content","hasClass","accordion","show","tabs","hide","func","wait","timeout","clearTimeout","setTimeout"],"mappings":"CAIC,SAASA,GACT,YAEsB,mBAAXC,SAAyBA,OAAOC,IAC1CD,QAAQ,UAAWD,GAEnBA,EAAQG,SAER,SAASC,GACV,YAEAA,GAAEC,GAAGC,cAAgB,SAAUC,EAASC,EAAkBC,GAGzD,GAAIC,GAAWN,EAAEO,QAChBC,WAAY,sBACVL,GAECD,EAAgBO,KAKhBC,EAAO,WAEVC,IAGAX,EAAEY,QAAQC,GAAG,uBAAwBC,EAASH,EAAW,OAGtDA,EAAY,WACf,GAAII,GAAkBC,WAAWV,EAASE,YAAYS,OAEtDf,GAAcgB,KAAK,WAClB,GAAIC,GAAenB,EAAES,MACjBW,EAAWD,EAAaE,KAAK,2BAC7BC,EAAUH,EAAaE,KAAK,yBAE3BN,IAaAO,EAAQC,SAAS,iBACpBD,EAAQE,UAAU,WAIdL,EAAaI,SAAS,aAC1BH,EAASK,OACTN,EAAaO,KAAKrB,MAlBfc,EAAaI,SAAS,YACzBJ,EAAaO,KAAK,WAIdJ,EAAQC,SAAS,kBACrBH,EAASO,OACTL,EAAQE,UAAUpB,QAwBlBU,EAAW,SAASc,EAAMC,GAC7B,GAAIC,EAEJ,OAAO,YACNC,aAAaD,GAEbA,EAAUE,WAAW,WACpBJ,KACEC,IAQL,OAHAnB,KAGOD","file":"jquery.responsive-accordion-tabs.min.js","sourcesContent":["/**\r\n * A jQuery plugin to create accordions or tabs as appropriate.\r\n * @param options\r\n */\r\n(function(factory) {\r\n\t'use strict';\r\n\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(['jquery'], factory);\r\n\t} else {\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function($) {\r\n\t'use strict';\r\n\r\n\t$.fn.accordionTabs = function (options, accordionOptions, tabOptions) {\r\n\t\t// The settings object provides default settings.\r\n\t\t// The options argument can override them.\r\n\t\tvar settings = $.extend({\r\n\t\t\tmediaQuery: '(min-width: 800px)'\r\n\t\t}, options);\r\n\r\n\t\tvar accordionTabs = this;\r\n\r\n\t\t/**\r\n\t\t * Initializes the plugin\r\n\t\t */\r\n\t\tvar init = function() {\r\n\t\t\t// Implement now...\r\n\t\t\timplement();\r\n\r\n\t\t\t// ...and again when the window resizes.\r\n\t\t\t$(window).on('resize.accordionTabs', debounce(implement, 250));\r\n\t\t};\r\n\r\n\t\tvar implement = function() {\r\n\t\t\tvar isLargeViewport = matchMedia(settings.mediaQuery).matches;\r\n\r\n\t\t\taccordionTabs.each(function() {\r\n\t\t\t\tvar accordionTab = $(this);\r\n\t\t\t\tvar headings = accordionTab.find('.accordion-tab-headings');\r\n\t\t\t\tvar content = accordionTab.find('.accordion-tab-content');\r\n\r\n\t\t\t\tif (!isLargeViewport) {\r\n\t\t\t\t\t// Destroy tabs if previously implemented\r\n\t\t\t\t\tif (accordionTab.hasClass('ui-tabs')) {\r\n\t\t\t\t\t\taccordionTab.tabs('destroy');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Implement accordion\r\n\t\t\t\t\tif (!content.hasClass('ui-accordion')) {\r\n\t\t\t\t\t\theadings.hide();\r\n\t\t\t\t\t\tcontent.accordion(accordionOptions);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Destroy accordion if previously implemented\r\n\t\t\t\t\tif (content.hasClass('ui-accordion')) {\r\n\t\t\t\t\t\tcontent.accordion('destroy');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Implement tabs\r\n\t\t\t\t\tif (!accordionTab.hasClass('ui-tabs')) {\r\n\t\t\t\t\t\theadings.show();\r\n\t\t\t\t\t\taccordionTab.tabs(tabOptions);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Returns a function that cannot be called in succession unless a specified\r\n\t\t * amount of time has passed\r\n\t\t * @param func - The function to debounce\r\n\t\t * @param wait - The wait time (ms) before running the function again\r\n\t\t * @returns The debounced function\r\n\t\t */\r\n\t\tvar debounce = function(func, wait) {\r\n\t\t\tvar timeout;\r\n\r\n\t\t\treturn function() {\r\n\t\t\t\tclearTimeout(timeout);\r\n\r\n\t\t\t\ttimeout = setTimeout(function() {\r\n\t\t\t\t\tfunc();\r\n\t\t\t\t}, wait);\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\t// Let's go!\r\n\t\tinit();\r\n\r\n\t\t// Always return the target object to allow chaining.\r\n\t\treturn this;\r\n\t};\r\n}));\r\n"],"sourceRoot":"/source/"}